[{"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/index.js":"1","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/api/instances.js":"2","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/App/App.js":"3","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/redux/store.js":"4","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/utils.js":"5","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/routes/appRoutes.js":"6","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/redux/slices/product.js":"7","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/redux/slices/category.js":"8","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/redux/slices/order.js":"9","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/redux/slices/admin.js":"10","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/redux/slices/user.js":"11","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Footer/index.js":"12","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/App/Admin.js":"13","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/App/Client.js":"14","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/api/endpoints.js":"15","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Footer/style.js":"16","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/routes/clientRoutes.js":"17","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/routes/adminRoutes.js":"18","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Loader/index.js":"19","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/AdminHeader/index.js":"20","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Header/index.js":"21","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/pages/Order/index.js":"22","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/pages/Orders/index.js":"23","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/CategoryForm/index.js":"24","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Header/style.js":"25","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Search/index.js":"26","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Sidebar/index.js":"27","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/CategoryForm/style.js":"28","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/hoc/withAdminAuth.js":"29","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/pages/Orders/style.js":"30","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Sidebar/style.js":"31","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/pages/Order/style.js":"32","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/AddReview/index.js":"33","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/AddReview/style.js":"34","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/AdminHeader/style.js":"35","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Categories/index.js":"36","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/ProductForm/index.js":"37","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Products/index.js":"38","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Home/index.js":"39","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Login/index.js":"40","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Checkout/index.js":"41","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Cart/index.js":"42","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Profile/index.js":"43","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/EditProfile/index.js":"44","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Signup/index.js":"45","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Login/index.js":"46","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Shop/index.js":"47","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/ProductPage/index.js":"48","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/CategoryProducts/index.js":"49","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/SearchPage/index.js":"50","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Home/index.js":"51","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Categories/style.js":"52","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/ProductForm/style.js":"53","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Products/Row.js":"54","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Products/style.js":"55","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Home/style.js":"56","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Login/style.js":"57","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Checkout/style.js":"58","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Checkout/Payment.js":"59","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Checkout/Shipping.js":"60","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Profile/style.js":"61","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/hoc/withUserAuth.js":"62","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Cart/style.js":"63","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Shop/style.js":"64","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/ProductPage/style.js":"65","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/CategoryProducts/style.js":"66","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/SearchPage/style.js":"67","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Home/style.js":"68","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Filter/index.js":"69","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Products/index.js":"70","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Review/index.js":"71","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Products/Reviews.js":"72","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Hero/index.js":"73","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Filter/style.js":"74","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Review/style.js":"75","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Hero/style.js":"76","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Product/index.js":"77","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Product/style.js":"78"},{"size":994,"mtime":1638362614000,"results":"79","hashOfConfig":"80"},{"size":574,"mtime":1614416648000,"results":"81","hashOfConfig":"80"},{"size":1040,"mtime":1614416648000,"results":"82","hashOfConfig":"80"},{"size":495,"mtime":1638345090000,"results":"83","hashOfConfig":"80"},{"size":285,"mtime":1614416648000,"results":"84","hashOfConfig":"80"},{"size":240,"mtime":1616179522000,"results":"85","hashOfConfig":"80"},{"size":3363,"mtime":1638446010000,"results":"86","hashOfConfig":"80"},{"size":688,"mtime":1614416648000,"results":"87","hashOfConfig":"80"},{"size":2327,"mtime":1615477482000,"results":"88","hashOfConfig":"80"},{"size":10099,"mtime":1638480832000,"results":"89","hashOfConfig":"80"},{"size":6353,"mtime":1614416648000,"results":"90","hashOfConfig":"80"},{"size":652,"mtime":1614416648000,"results":"91","hashOfConfig":"80"},{"size":935,"mtime":1614416648000,"results":"92","hashOfConfig":"80"},{"size":921,"mtime":1614416648000,"results":"93","hashOfConfig":"80"},{"size":1780,"mtime":1657136951239,"results":"94","hashOfConfig":"80"},{"size":394,"mtime":1614416648000,"results":"95","hashOfConfig":"80"},{"size":1779,"mtime":1614416648000,"results":"96","hashOfConfig":"80"},{"size":1500,"mtime":1614416648000,"results":"97","hashOfConfig":"80"},{"size":271,"mtime":1614416648000,"results":"98","hashOfConfig":"80"},{"size":2552,"mtime":1614416648000,"results":"99","hashOfConfig":"80"},{"size":5120,"mtime":1616525538000,"results":"100","hashOfConfig":"80"},{"size":8539,"mtime":1615483122000,"results":"101","hashOfConfig":"80"},{"size":3506,"mtime":1614416648000,"results":"102","hashOfConfig":"80"},{"size":2313,"mtime":1614416648000,"results":"103","hashOfConfig":"80"},{"size":733,"mtime":1616408524000,"results":"104","hashOfConfig":"80"},{"size":1031,"mtime":1614416648000,"results":"105","hashOfConfig":"80"},{"size":4480,"mtime":1614416648000,"results":"106","hashOfConfig":"80"},{"size":417,"mtime":1614416648000,"results":"107","hashOfConfig":"80"},{"size":499,"mtime":1657110853194,"results":"108","hashOfConfig":"80"},{"size":310,"mtime":1614416648000,"results":"109","hashOfConfig":"80"},{"size":355,"mtime":1614416648000,"results":"110","hashOfConfig":"80"},{"size":630,"mtime":1614416648000,"results":"111","hashOfConfig":"80"},{"size":2275,"mtime":1614416648000,"results":"112","hashOfConfig":"80"},{"size":207,"mtime":1614416648000,"results":"113","hashOfConfig":"80"},{"size":549,"mtime":1614416648000,"results":"114","hashOfConfig":"80"},{"size":3497,"mtime":1614416648000,"results":"115","hashOfConfig":"80"},{"size":6361,"mtime":1614416648000,"results":"116","hashOfConfig":"80"},{"size":2375,"mtime":1614416648000,"results":"117","hashOfConfig":"80"},{"size":1273,"mtime":1614416648000,"results":"118","hashOfConfig":"80"},{"size":1899,"mtime":1638368508000,"results":"119","hashOfConfig":"80"},{"size":4960,"mtime":1615477576000,"results":"120","hashOfConfig":"80"},{"size":4428,"mtime":1614416648000,"results":"121","hashOfConfig":"80"},{"size":1536,"mtime":1614416648000,"results":"122","hashOfConfig":"80"},{"size":2289,"mtime":1614416648000,"results":"123","hashOfConfig":"80"},{"size":2442,"mtime":1614416648000,"results":"124","hashOfConfig":"80"},{"size":2167,"mtime":1614416648000,"results":"125","hashOfConfig":"80"},{"size":1232,"mtime":1614416648000,"results":"126","hashOfConfig":"80"},{"size":4463,"mtime":1638449486000,"results":"127","hashOfConfig":"80"},{"size":1104,"mtime":1614416648000,"results":"128","hashOfConfig":"80"},{"size":1329,"mtime":1614416648000,"results":"129","hashOfConfig":"80"},{"size":1465,"mtime":1614416648000,"results":"130","hashOfConfig":"80"},{"size":351,"mtime":1614416648000,"results":"131","hashOfConfig":"80"},{"size":651,"mtime":1614416648000,"results":"132","hashOfConfig":"80"},{"size":4379,"mtime":1614416648000,"results":"133","hashOfConfig":"80"},{"size":687,"mtime":1614416648000,"results":"134","hashOfConfig":"80"},{"size":396,"mtime":1614416648000,"results":"135","hashOfConfig":"80"},{"size":517,"mtime":1614416648000,"results":"136","hashOfConfig":"80"},{"size":1204,"mtime":1614416648000,"results":"137","hashOfConfig":"80"},{"size":1889,"mtime":1614416648000,"results":"138","hashOfConfig":"80"},{"size":1965,"mtime":1614416648000,"results":"139","hashOfConfig":"80"},{"size":387,"mtime":1614416648000,"results":"140","hashOfConfig":"80"},{"size":477,"mtime":1614416648000,"results":"141","hashOfConfig":"80"},{"size":422,"mtime":1614416648000,"results":"142","hashOfConfig":"80"},{"size":162,"mtime":1614416648000,"results":"143","hashOfConfig":"80"},{"size":1019,"mtime":1614416648000,"results":"144","hashOfConfig":"80"},{"size":162,"mtime":1614416648000,"results":"145","hashOfConfig":"80"},{"size":162,"mtime":1614416648000,"results":"146","hashOfConfig":"80"},{"size":250,"mtime":1614416648000,"results":"147","hashOfConfig":"80"},{"size":1080,"mtime":1614416648000,"results":"148","hashOfConfig":"80"},{"size":346,"mtime":1614416648000,"results":"149","hashOfConfig":"80"},{"size":743,"mtime":1614416648000,"results":"150","hashOfConfig":"80"},{"size":606,"mtime":1614416648000,"results":"151","hashOfConfig":"80"},{"size":55497,"mtime":1616587300000,"results":"152","hashOfConfig":"80"},{"size":349,"mtime":1614416648000,"results":"153","hashOfConfig":"80"},{"size":453,"mtime":1614416648000,"results":"154","hashOfConfig":"80"},{"size":822,"mtime":1614416648000,"results":"155","hashOfConfig":"80"},{"size":2182,"mtime":1616603268000,"results":"156","hashOfConfig":"80"},{"size":704,"mtime":1614416648000,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"mox8wa",{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"160"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"160"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"160"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"160"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"160"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"160"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"160"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"160"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"160"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"160"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"160"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"160"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"160"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"160"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"160"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"160"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"160"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"160"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"160"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"160"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"160"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"160"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"160"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"160"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"160"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/index.js",[],["340","341"],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/api/instances.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/App/App.js",["342"],"import { useEffect } from \"react\";\nimport { createMuiTheme, ThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { setHistory } from \"../utils\";\nimport { NotificationContainer } from \"react-notifications\";\nimport { appRoutes } from \"../routes/appRoutes\";\nimport { Footer } from \"../components/Footer/\";\n\nexport const App = () => {\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: \"Josefin Sans, sans-serif\",\n    },\n    palette: {\n      primary: {\n        main: \"#3399FF\",\n      },\n      secondary: {\n        main: \"#EF837B\",\n      },\n    },\n  });\n\n  const history = useHistory();\n\n  // Initializing the history object so that we can use it in redux\n  useEffect(() => setHistory(history), []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Switch>\n        {appRoutes.map((route) => (\n          <Route {...route} />\n        ))}\n      </Switch>\n      <Footer />\n      <NotificationContainer />\n    </ThemeProvider>\n  );\n};\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/redux/store.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/utils.js",["343","344"],"let history;\n\nconst setHistory = (historyObj) => (history = historyObj);\n\nconst filterProducts = (products, filter) => {\n  if (filter == \"All\") return products;\n  return products.filter((product) => product.category.name == filter);\n};\n\nexport { history, setHistory, filterProducts };\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/routes/appRoutes.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/redux/slices/product.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/redux/slices/category.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/redux/slices/order.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/redux/slices/admin.js",["345","346","347","348"],"import {\n  createSlice,\n  createAsyncThunk,\n  createEntityAdapter,\n} from \"@reduxjs/toolkit\";\nimport { AdminAxios, Axios } from \"../../api/instances\";\nimport * as Api from \"../../api/endpoints\";\nimport { NotificationManager } from \"react-notifications\";\nimport { history } from \"../../utils\";\n\nconst login = createAsyncThunk(\"admin/login\", async ({ email, password }) => {\n  try {\n    const res = await Axios.post(Api.ADMIN_LOGIN, {\n      email,\n      password,\n    });\n    history.push(\"/admin\");\n    NotificationManager.success(\"Logged in!\");\n    return res.data;\n  } catch (error) {\n    throw error?.response?.data || error.message;\n  }\n});\n\nconst isLogin = createAsyncThunk(\"admin/isLogin\", async () => {\n  const token = localStorage.getItem(\"adminToken\");\n  if (!token) throw \"ERROR!\";\n\n  const res = await AdminAxios.get(Api.IS_ADMIN_LOGIN);\n  return res.data;\n});\n\nconst fetchProducts = createAsyncThunk(\"admin/fetchProducts\", async () => {\n  const res = await AdminAxios.get(Api.ADMIN_PRODUCTS);\n  return res.data.products;\n});\n\nconst createProduct = createAsyncThunk(\n  \"admin/createProduct\",\n  async ({ name, description, file, status, category, price, quantity }) => {\n    try {\n      if (!file) throw new Error(\"Upload image!\");\n      const data = new FormData();\n      data.append(\"file\", file);\n      data.append(\"upload_preset\", \"Ecommerce Images\");\n      \n      const res = await Axios.post(\n        \"https://api.cloudinary.com/v1_1/dw3ap99ie/image/upload\",\n        data\n      );\n      await AdminAxios.post(Api.CREATE_PRODUCT, {\n        name,\n        description,\n        status,\n        category,\n        price,\n        quantity,\n        image: res.data.secure_url,\n      });\n      history.push(\"/admin/products\");\n      return \"Product created!\";\n    } catch (error) {\n      throw error?.response?.data || error.message;\n    }\n  }\n);\n\nconst editProduct = createAsyncThunk(\n  \"admin/editProduct\",\n  async ({\n    id,\n    name,\n    description,\n    file,\n    status,\n    category,\n    price,\n    quantity,\n  }) => {\n    try {\n      if (!file) throw new Error(\"Upload image!\");\n      const data = new FormData();\n      data.append(\"file\", file);\n      data.append(\"upload_preset\", \"Ecommerce Images\");\n      const res = await Axios.post(\n        \"https://api.cloudinary.com/v1_1/dw3ap99ie/image/upload\",\n        data\n      );\n\n      await AdminAxios.patch(Api.UPDATE_PRODUCT(id), {\n        name,\n        description,\n        status,\n        category,\n        price,\n        quantity,\n        image: res.data.secure_url,\n      });\n      history.push(\"/admin/products\");\n      return \"Product updated!\";\n    } catch (error) {\n      throw error?.response?.data || error.message;\n    }\n  }\n);\n\nconst deleteProduct = createAsyncThunk(\"admin/deleteProduct\", async (id) => {\n  const res = await AdminAxios.delete(Api.DELETE_PRODUCT(id));\n  return res.data.product._id;\n});\n\nconst fetchCategories = createAsyncThunk(\"admin/fetchCategories\", async () => {\n  const res = await Axios.get(Api.GET_CATEGORIES);\n  return res.data.categories;\n});\n\nconst createCategory = createAsyncThunk(\n  \"admin/createCategory\",\n  async ({ name }) => {\n    try {\n      const res = await AdminAxios.post(Api.CREATE_CATEGORY, { name });\n      history.push(\"/admin/categories\");\n      NotificationManager.success(\"Category created!\");\n      return res.data.category;\n    } catch (error) {\n      throw error?.response?.data || error.message;\n    }\n  }\n);\n\nconst editCategory = createAsyncThunk(\n  \"admin/editCategory\",\n  async ({ id, name }) => {\n    try {\n      const res = await AdminAxios.patch(Api.UPDATE_CATEGORY(id), { name });\n      history.push(\"/admin/categories\");\n      NotificationManager.success(\"Category updated!\");\n      return res.data.category;\n    } catch (error) {\n      throw error?.response?.data || error.message;\n    }\n  }\n);\n\nconst deleteCategory = createAsyncThunk(\"admin/deleteCategory\", async (id) => {\n  const res = await AdminAxios.delete(Api.DELETE_CATEGORY(id));\n  return res.data.category._id;\n});\n\nconst fetchAdminOrders = createAsyncThunk(\n  \"admin/fetchAdminOrders\",\n  async () => {\n    const res = await AdminAxios.get(Api.ADMIN_ORDERS);\n    return res.data.orders;\n  }\n);\n\nconst fetchAdminOrder = createAsyncThunk(\n  \"admin/fetchAdminOrder\",\n  async (id) => {\n    const res = await AdminAxios.get(Api.ADMIN_ORDER(id));\n    return res.data.order;\n  }\n);\n\nconst editAdminOrder = createAsyncThunk(\n  \"admin/editAdminOrder\",\n  async ({ id, status }) => {\n    const res = await AdminAxios.patch(Api.UPDATE_ORDER(id), { status });\n    NotificationManager.success(\"Order's status updated!\");\n    return res.data.order;\n  }\n);\n\nconst initialState = {\n  admin: true,\n  authLoading: false,\n  loading: false,\n  products: [],\n  contentLoading: false,\n  categories: [],\n  orders: [],\n};\n\nconst adminSlice = createSlice({\n  name: \"admin\",\n  initialState,\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.pending, (state, action) => {\n        state.authLoading = true;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.admin = true;\n        localStorage.setItem(\"adminToken\", `Bearer ${action.payload.token}`);\n        state.authLoading = false;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.authLoading = false;\n        NotificationManager.error(action.error.message);\n      })\n      .addCase(isLogin.pending, (state, action) => {\n        state.loading = true;\n      })\n      .addCase(isLogin.fulfilled, (state, action) => {\n        state.admin = true;\n        state.loading = false;\n      })\n      .addCase(isLogin.rejected, (state, action) => {\n        state.loading = false;\n        state.admin = false;\n        localStorage.removeItem(\"adminToken\");\n      })\n      .addCase(fetchProducts.pending, (state, action) => {\n        state.contentLoading = true;\n      })\n      .addCase(fetchProducts.fulfilled, (state, action) => {\n        state.products = action.payload;\n        state.contentLoading = false;\n      })\n      .addCase(createProduct.pending, (state, action) => {\n        state.authLoading = true;\n      })\n      .addCase(createProduct.fulfilled, (state, action) => {\n        state.authLoading = false;\n        NotificationManager.success(\"Product created!\");\n      })\n      .addCase(createProduct.rejected, (state, action) => {\n        state.authLoading = false;\n        NotificationManager.error(action.error.message);\n      })\n      .addCase(editProduct.pending, (state, action) => {\n        state.authLoading = true;\n      })\n      .addCase(editProduct.fulfilled, (state, action) => {\n        state.authLoading = false;\n        NotificationManager.success(\"Product updated!\");\n      })\n      .addCase(editProduct.rejected, (state, action) => {\n        state.authLoading = false;\n        NotificationManager.error(action.error.message);\n      })\n      .addCase(deleteProduct.pending, (state, action) => {\n        state.authLoading = true;\n      })\n      .addCase(deleteProduct.fulfilled, (state, action) => {\n        state.authLoading = false;\n        NotificationManager.success(\"Product deleted!\");\n        state.products = state.products.filter(\n          ({ _id }) => _id != action.payload\n        );\n      })\n      .addCase(deleteProduct.rejected, (state, action) => {\n        state.authLoading = false;\n        NotificationManager.error(action.error.message);\n      })\n      .addCase(fetchCategories.pending, (state, action) => {\n        state.contentLoading = true;\n      })\n      .addCase(fetchCategories.fulfilled, (state, action) => {\n        state.categories = action.payload;\n        state.contentLoading = false;\n      })\n      .addCase(fetchCategories.rejected, (state, action) => {\n        state.contentLoading = false;\n        NotificationManager.error(action.error.message);\n      })\n      .addCase(createCategory.pending, (state, action) => {\n        state.authLoading = true;\n      })\n      .addCase(createCategory.fulfilled, (state, action) => {\n        state.authLoading = false;\n      })\n      .addCase(createCategory.rejected, (state, action) => {\n        state.authLoading = false;\n        NotificationManager.error(action.error.message);\n      })\n      .addCase(editCategory.pending, (state, action) => {\n        state.authLoading = true;\n      })\n      .addCase(editCategory.fulfilled, (state, action) => {\n        state.authLoading = false;\n      })\n      .addCase(editCategory.rejected, (state, action) => {\n        state.authLoading = false;\n        NotificationManager.error(action.error.message);\n      })\n      .addCase(deleteCategory.pending, (state, action) => {\n        state.authLoading = true;\n      })\n      .addCase(deleteCategory.fulfilled, (state, action) => {\n        state.authLoading = false;\n        NotificationManager.success(\"Category deleted!\");\n        state.categories = state.categories.filter(\n          ({ _id }) => _id != action.payload\n        );\n      })\n      .addCase(deleteCategory.rejected, (state, action) => {\n        state.authLoading = false;\n        NotificationManager.error(action.error.message);\n      })\n      .addCase(fetchAdminOrders.pending, (state, action) => {\n        state.contentLoading = true;\n      })\n      .addCase(fetchAdminOrders.fulfilled, (state, action) => {\n        state.orders = action.payload;\n        state.contentLoading = false;\n      })\n      .addCase(fetchAdminOrder.pending, (state, action) => {\n        state.contentLoading = true;\n      })\n      .addCase(fetchAdminOrder.fulfilled, (state, action) => {\n        state.order = action.payload;\n        state.contentLoading = false;\n      })\n      .addCase(editAdminOrder.pending, (state, action) => {\n        state.authLoading = true;\n      })\n      .addCase(editAdminOrder.fulfilled, (state, action) => {\n        state.order = action.payload;\n        state.authLoading = false;\n      });\n  },\n});\n\nexport {\n  login,\n  isLogin,\n  fetchProducts,\n  createProduct,\n  editProduct,\n  deleteProduct,\n  fetchCategories,\n  createCategory,\n  editCategory,\n  deleteCategory,\n  fetchAdminOrders,\n  fetchAdminOrder,\n  editAdminOrder,\n};\n\nexport default adminSlice.reducer;\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/redux/slices/user.js",["349"],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { Axios, UserAxios } from \"../../api/instances\";\nimport * as Api from \"../../api/endpoints\";\nimport { history } from \"../../utils\";\nimport { NotificationManager } from \"react-notifications\";\n\nconst initialState = {\n  user: {},\n  loading: false,\n  authLoading: false,\n  cartLoading: false,\n};\n\nconst signup = createAsyncThunk(\n  \"users/signup\",\n  async ({ name, email, password }) => {\n    try {\n      const res = await Axios.post(Api.USER_SIGNUP, {\n        name,\n        email,\n        password,\n      });\n      history.push(\"/\");\n      return res.data;\n    } catch (error) {\n      throw error?.response?.data || error.message;\n    }\n  }\n);\n\nconst login = createAsyncThunk(\"users/login\", async ({ email, password }) => {\n  try {\n    const res = await Axios.post(Api.USER_LOGIN, {\n      email,\n      password,\n    });\n    history.push(\"/\");\n    return res.data;\n  } catch (error) {\n    throw error?.response?.data || error.message;\n  }\n});\n\nconst isLogin = createAsyncThunk(\"users/isLogin\", async () => {\n  const token = localStorage.getItem(\"userToken\");\n  if (!token) throw \"ERROR!\";\n\n  const res = await UserAxios.get(Api.IS_USER_LOGIN);\n  return res.data.user;\n});\n\nconst editUser = createAsyncThunk(\n  \"users/editUser\",\n  async ({ name, email, password }) => {\n    try {\n      const res = await UserAxios.patch(Api.UPDATE_USER, {\n        name,\n        email,\n        password,\n      });\n      history.push(\"/profile\");\n      return res.data.user;\n    } catch (error) {\n      throw error?.response?.data || error.message;\n    }\n  }\n);\n\nconst addToCart = createAsyncThunk(\"users/addToCart\", async (id) => {\n  try {\n    const res = await UserAxios.post(Api.ADD_TO_CART(id));\n    return res.data.user;\n  } catch (error) {\n    throw error?.response?.data || error.message;\n  }\n});\n\nconst decrementFromCart = createAsyncThunk(\n  \"users/decrementFromCart\",\n  async (id) => {\n    try {\n      const res = await UserAxios.delete(Api.DECREMENT_FROM_CART(id));\n      return res.data.user;\n    } catch (error) {\n      throw error?.response?.data || error.message;\n    }\n  }\n);\n\nconst deleteFromCart = createAsyncThunk(\"users/deleteFromCart\", async (id) => {\n  try {\n    const res = await UserAxios.delete(Api.DELETE_FROM_CART(id));\n    return res.data.user;\n  } catch (error) {\n    throw error?.response?.data || error.message;\n  }\n});\n\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    userLogout(state, action) {\n      localStorage.removeItem(\"userToken\");\n      state.user = null;\n      NotificationManager.success(\"Logged out!\");\n    },\n    emptyCart(state, action) {\n      state.user.cart = {\n        items: [],\n        price: 0,\n      };\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(signup.pending, (state, action) => {\n        state.authLoading = true;\n      })\n      .addCase(signup.fulfilled, (state, action) => {\n        state.user = action.payload.user;\n        localStorage.setItem(\"userToken\", `Bearer ${action.payload.token}`);\n        state.authLoading = false;\n        NotificationManager.success(\"Signed up!\");\n      })\n      .addCase(signup.rejected, (state, action) => {\n        state.authLoading = false;\n        NotificationManager.error(action.error.message);\n      })\n      .addCase(login.pending, (state, action) => {\n        state.authLoading = true;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.user = action.payload.user;\n        localStorage.setItem(\"userToken\", `Bearer ${action.payload.token}`);\n        state.authLoading = false;\n        NotificationManager.success(\"Logged in!\");\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.authLoading = false;\n        NotificationManager.error(action.error.message);\n      })\n      .addCase(isLogin.pending, (state, action) => {\n        state.loading = true;\n      })\n      .addCase(isLogin.fulfilled, (state, action) => {\n        state.user = action.payload;\n        state.loading = false;\n      })\n      .addCase(isLogin.rejected, (state, action) => {\n        state.loading = false;\n        localStorage.removeItem(\"userToken\");\n        state.user = null\n      })\n      .addCase(editUser.pending, (state, action) => {\n        state.authLoading = true;\n      })\n      .addCase(editUser.fulfilled, (state, action) => {\n        state.user = action.payload;\n        state.authLoading = false;\n        NotificationManager.success(\"Profile updated!\");\n      })\n      .addCase(editUser.rejected, (state, action) => {\n        state.authLoading = false;\n        NotificationManager.error(action.error.message);\n      })\n      .addCase(addToCart.pending, (state, action) => {\n        state.cartLoading = true;\n      })\n      .addCase(addToCart.fulfilled, (state, action) => {\n        state.user = action.payload;\n        state.cartLoading = false;\n        NotificationManager.success(\"Added to cart\");\n      })\n      .addCase(addToCart.rejected, (state, action) => {\n        state.cartLoading = false;\n        if (action.error.message === \"Unauthenticated\") {\n          NotificationManager.error(\"Login to continue!\");\n        } else {\n          NotificationManager.error(action.error.message);\n        }\n      })\n      .addCase(decrementFromCart.pending, (state, action) => {\n        state.cartLoading = true;\n      })\n      .addCase(decrementFromCart.fulfilled, (state, action) => {\n        state.user = action.payload;\n        state.cartLoading = false;\n      })\n      .addCase(decrementFromCart.rejected, (state, action) => {\n        state.cartLoading = false;\n        NotificationManager.error(action.error.message);\n      })\n      .addCase(deleteFromCart.pending, (state, action) => {\n        state.cartLoading = true;\n      })\n      .addCase(deleteFromCart.fulfilled, (state, action) => {\n        state.user = action.payload;\n        state.cartLoading = false;\n        NotificationManager.success(\"Item removed!\");\n      })\n      .addCase(deleteFromCart.rejected, (state, action) => {\n        state.cartLoading = false;\n        NotificationManager.error(action.error.message);\n      });\n  },\n});\n\nexport {\n  signup,\n  login,\n  isLogin,\n  editUser,\n  addToCart,\n  decrementFromCart,\n  deleteFromCart,\n};\n\nexport const { userLogout, emptyCart } = usersSlice.actions;\n\nexport default usersSlice.reducer;\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Footer/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/App/Admin.js",["350"],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isLogin } from \"../redux/slices/admin\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { adminRoutes } from \"../routes/adminRoutes\";\nimport { AdminHeader } from \"../components/AdminHeader/\";\nimport { Loader } from \"../components/Loader/\";\n\nexport const Admin = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.admin.loading);\n  const history = useHistory();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [history.location.pathname]);\n\n  useEffect(() => {\n    dispatch(isLogin());\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <AdminHeader />\n\n          <Switch>\n            {adminRoutes.map((route) => (\n              <Route {...route} />\n            ))}\n          </Switch>\n        </>\n      )}\n    </>\n  );\n};\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/App/Client.js",["351"],"import { useEffect } from \"react\";\nimport { Header } from \"../components/Header\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isLogin } from \"../redux/slices/user\";\nimport { clientRoutes } from \"../routes/clientRoutes\";\nimport { Loader } from \"../components/Loader/\";\n\nexport const Client = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.users.loading);\n  const history = useHistory();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [history.location.pathname]);\n\n  useEffect(() => {\n    dispatch(isLogin());\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Header />\n          <Switch>\n            {clientRoutes.map((route) => (\n              <Route {...route} />\n            ))}\n          </Switch>\n        </>\n      )}\n    </>\n  );\n};\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/api/endpoints.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Footer/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/routes/clientRoutes.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/routes/adminRoutes.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Loader/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/AdminHeader/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Header/index.js",["352"],"import { useState, useEffect } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Menu,\n  MenuItem,\n  IconButton,\n  Hidden,\n  Badge,\n} from \"@material-ui/core\";\nimport { useStyles } from \"./style\";\nimport {\n  ExpandMoreOutlined,\n  HomeOutlined,\n  CategoryOutlined,\n  Storefront,\n  PermIdentityOutlined,\n  ExitToAppOutlined,\n  VpnKeyOutlined,\n  ShoppingCartOutlined,\n  LocalMallOutlined,\n} from \"@material-ui/icons\";\nimport { Sidebar } from \"../Sidebar/\";\nimport { MenuRounded } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCategories } from \"../../redux/slices/category\";\nimport { NavLink } from \"react-router-dom\";\nimport { Search } from \"../Search/\";\nimport { userLogout } from \"../../redux/slices/user\";\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n  const categories = useSelector((state) => state.categories.categories);\n  const user = useSelector((state) => state.users.user);\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [openSidebar, setOpenSidebar] = useState(false);\n  const cartItems = user?.cart?.items?.reduce((total, value) => {\n    return value.quantity + total;\n  }, 0);\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, []);\n\n  const closeDropdownHandler = () => setAnchorEl(null);\n  const openDropdownHandler = (e) => setAnchorEl(e.currentTarget);\n\n  const handleOpenSidebar = () => setOpenSidebar(true);\n  const handleCloseSidebar = () => setOpenSidebar(false);\n\n  const dropdown = (\n    <Menu\n      anchorEl={anchorEl}\n      open={!!anchorEl}\n      keepMounted\n      onClose={closeDropdownHandler}\n    >\n      {categories.map(({ _id, name }) => (\n        <MenuItem\n          component={NavLink}\n          to={`/category/${_id}`}\n          onClick={closeDropdownHandler}\n          key={_id}\n        >\n          {name}\n        </MenuItem>\n      ))}\n    </Menu>\n  );\n\n  return (\n    <AppBar\n      position=\"sticky\"\n      className={classes.root}\n      style={{ backgroundColor: \"white\" }}\n    >\n      <Toolbar>\n        <Typography\n          className={classes.heading}\n          variant=\"h4\"\n          component={NavLink}\n          to=\"/\"\n          exact\n        >\n          ReactShop\n        </Typography>\n\n        <Hidden smDown>\n          <Search className={classes.input} />\n        </Hidden>\n\n        <Hidden mdDown>\n          <Typography\n            component={NavLink}\n            activeClassName={classes.activeLink}\n            exact\n            to=\"/\"\n            className={classes.navItems}\n          >\n            <HomeOutlined /> Home\n          </Typography>\n\n          <Typography\n            component={NavLink}\n            activeClassName={classes.activeLink}\n            exact\n            to=\"/shop\"\n            className={classes.navItems}\n          >\n            <Storefront /> Shop\n          </Typography>\n\n          <Typography\n            className={classes.navItems}\n            onClick={openDropdownHandler}\n          >\n            <CategoryOutlined /> Category <ExpandMoreOutlined />\n          </Typography>\n\n          {user ? (\n            <>\n              <Typography\n                component={NavLink}\n                activeClassName={classes.activeLink}\n                exact\n                to=\"/profile\"\n                className={classes.navItems}\n              >\n                <PermIdentityOutlined /> Profile\n              </Typography>\n              <Typography\n                component={NavLink}\n                activeClassName={classes.activeLink}\n                exact\n                to=\"/cart\"\n                className={classes.navItems}\n              >\n                <ShoppingCartOutlined />{\" \"}\n                <Badge badgeContent={cartItems} color=\"primary\">\n                  Cart\n                </Badge>\n              </Typography>\n              <Typography\n                component={NavLink}\n                activeClassName={classes.activeLink}\n                exact\n                to=\"/orders\"\n                className={classes.navItems}\n              >\n                <LocalMallOutlined /> Orders\n              </Typography>\n              <Typography\n                className={classes.navItems}\n                onClick={() => dispatch(userLogout())}\n              >\n                <ExitToAppOutlined /> Logout\n              </Typography>\n            </>\n          ) : (\n            <Typography\n              component={NavLink}\n              activeClassName={classes.activeLink}\n              exact\n              to=\"/login\"\n              className={classes.navItems}\n            >\n              <VpnKeyOutlined /> Login\n            </Typography>\n          )}\n        </Hidden>\n\n        <Hidden lgUp>\n          <IconButton\n            onClick={handleOpenSidebar}\n            style={{ marginLeft: \"auto\" }}\n          >\n            <MenuRounded className={classes.menuIcon} />\n          </IconButton>\n        </Hidden>\n\n        {dropdown}\n\n        <Sidebar\n          cartItems={cartItems}\n          open={openSidebar}\n          onClose={handleCloseSidebar}\n        />\n      </Toolbar>\n    </AppBar>\n  );\n};\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/pages/Order/index.js",["353","354","355"],"import { useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  Grid,\n  Paper,\n  Chip,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Button,\n  CardActions,\n  CircularProgress,\n  Box,\n} from \"@material-ui/core\";\nimport {} from \"@material-ui/icons\";\nimport { useStyles } from \"./style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, Link, useHistory, Route } from \"react-router-dom\";\nimport { fetchOrder, deleteOrder } from \"../../../redux/slices/order\";\nimport { fetchAdminOrder, editAdminOrder } from \"../../../redux/slices/admin\";\nimport moment from \"moment\";\nimport { AddReview } from \"../../../components/AddReview/\";\nimport { Loader } from \"../../../components/Loader/\";\n\nconst showStatus = (status) => {\n  switch (status) {\n    case \"ORDERED\":\n      return \"PACKED\";\n    case \"PACKED\":\n      return \"SHIPPED\";\n    case \"SHIPPED\":\n      return \"DELIVERED\";\n    default:\n      return \"ORDER COMPLETED\";\n  }\n};\n\nexport const Order = ({ admin }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const contentLoading = useSelector((state) =>\n    admin ? state.admin.contentLoading : state.orders.contentLoading\n  );\n  const order = useSelector((state) =>\n    admin ? state.admin.order : state.orders.order\n  );\n  const { id } = useParams();\n  const items = order?.items?.reduce((total, item) => item.quantity + total, 0);\n  const buttonLoading = useSelector((state) => state.admin.authLoading);\n  const deleteLoading = useSelector((state) => state.orders.buttonLoading);\n  const adminExist = localStorage.getItem(\"adminToken\");\n  const userExist = localStorage.getItem(\"userToken\");\n\n  useEffect(() => {\n    if (admin && !adminExist) {\n      history.replace(\"/admin/login\");\n    }\n    if (!admin && !userExist) {\n      history.replace(\"/\");\n    }\n  }, [userExist, adminExist]);\n\n  useEffect(() => {\n    dispatch(admin ? fetchAdminOrder(id) : fetchOrder(id));\n  }, [id, history.location.pathname]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      {contentLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Typography className={classes.heading} variant=\"h3\">\n            Order Details\n          </Typography>\n\n          <Grid container spacing={4}>\n            <Grid item md={6} xs={12}>\n              <Paper className={classes.paper}>\n                <Typography>\n                  <span>Order ID</span> <Chip label={order?._id} size=\"small\" />\n                </Typography>\n                <Typography>\n                  <span>Products</span> {order?.items.length}\n                </Typography>\n                <Typography>\n                  <span>Items</span> {items}\n                </Typography>\n                <Typography>\n                  <span>Date</span> {moment(order?.date).fromNow()}\n                </Typography>\n                <Typography>\n                  <span>Price</span> ${order?.price}\n                </Typography>\n                <Typography>\n                  <span>Status</span>{\" \"}\n                  <Chip\n                    label={order?.status}\n                    size=\"small\"\n                    style={{ color: \"white\", fontWeight: \"bold\" }}\n                    color=\"primary\"\n                  />\n                </Typography>\n                {admin ? (\n                  <>\n                    {order?.status === \"DELIVERED\" ? null : (\n                      <Typography>\n                        <span>Change Status:</span>\n                      </Typography>\n                    )}\n                    <Button\n                      disabled={order?.status === \"DELIVERED\" || buttonLoading}\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      onClick={() =>\n                        dispatch(\n                          editAdminOrder({\n                            id,\n                            status: showStatus(order?.status),\n                          })\n                        )\n                      }\n                      endIcon={\n                        buttonLoading ? <CircularProgress size={20} /> : null\n                      }\n                    >\n                      {showStatus(order?.status)}\n                    </Button>\n                  </>\n                ) : null}\n              </Paper>\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <Paper className={classes.paper}>\n                <Typography variant=\"h6\">Shipping Address</Typography>\n                <Typography>{order?.shippingAddress?.country}</Typography>\n                <Typography>{order?.shippingAddress?.city}</Typography>\n                <Typography>{order?.shippingAddress?.address1}</Typography>\n                <Typography>{order?.shippingAddress?.address2}</Typography>\n                <Typography>{order?.shippingAddress?.zipCode}</Typography>\n              </Paper>\n            </Grid>\n          </Grid>\n\n          <Typography variant=\"h4\" className={classes.heading}>\n            Products\n          </Typography>\n\n          <Grid container spacing={5}>\n            {order?.items?.map((item) => {\n              let isAddReview = false;\n              const reviewExist = item.product.reviews?.find(\n                (review) => review.order == order._id\n              );\n\n              if (order.status === \"DELIVERED\" && !reviewExist && !admin) {\n                isAddReview = true;\n              }\n\n              return (\n                <Grid key={item._id} item xs={12} sm={6} lg={4}>\n                  <Card className={classes.product}>\n                    <CardActionArea\n                      onClick={() =>\n                        history.push(`/product/${item.product._id}`)\n                      }\n                    >\n                      <CardMedia\n                        style={{ height: \"250px\", backgroundSize: \"contain\" }}\n                        className={classes.media}\n                        image={item.product.image}\n                        title={item.product.name}\n                      />\n                    </CardActionArea>\n\n                    <CardContent>\n                      <Typography\n                        className={classes.productName}\n                        variant=\"h5\"\n                        component={Link}\n                        to={`/product/${item.product._id}`}\n                      >\n                        {item.product.name}\n                      </Typography>\n                      <Typography>\n                        <span>Quantity</span> {item.quantity}\n                      </Typography>\n                      <Typography>\n                        <span>Price</span> ${item.product.price}\n                      </Typography>\n                      <Typography>\n                        <span>Total Price</span> $\n                        {item.quantity * item.product.price}\n                      </Typography>\n\n                      {!admin && reviewExist ? (\n                        <Button variant=\"contained\" disabled>\n                          Already reviewed!\n                        </Button>\n                      ) : null}\n                    </CardContent>\n\n                    {isAddReview && (\n                      <CardActions>\n                        <Button\n                          style={{ color: \"white\" }}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() =>\n                            history.push(\n                              `/order/${id}/review/${item.product._id}`\n                            )\n                          }\n                        >\n                          Add Review\n                        </Button>\n                      </CardActions>\n                    )}\n                  </Card>\n                </Grid>\n              );\n            })}\n          </Grid>\n\n          {!admin && order?.status === \"DELIVERED\" ? (\n            <Box marginTop={4}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"large\"\n                disabled={deleteLoading}\n                onClick={() => dispatch(deleteOrder(id))}\n                endIcon={deleteLoading ? <CircularProgress size={20} /> : null}\n              >\n                Delete order\n              </Button>\n            </Box>\n          ) : null}\n        </>\n      )}\n\n      <Route\n        path={`/order/${id}/review/:productId`}\n        render={() => <AddReview order={id} />}\n      />\n    </Container>\n  );\n};\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/pages/Orders/index.js",["356","357"],"import { useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  Card,\n  Grid,\n  Chip,\n  Button,\n} from \"@material-ui/core\";\nimport {} from \"@material-ui/icons\";\nimport { useStyles } from \"./style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchOrders } from \"../../../redux/slices/order\";\nimport { fetchAdminOrders } from \"../../../redux/slices/admin\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { Loader } from \"../../../components/Loader/\";\n\nexport const Orders = ({ admin }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const orders = useSelector((state) =>\n    admin ? state.admin.orders : state.orders.orders\n  );\n  const contentLoading = useSelector((state) =>\n    admin ? state.admin.contentLoading : state.orders.contentLoading\n  );\n  const adminExist = localStorage.getItem(\"adminToken\");\n  const userExist = localStorage.getItem(\"userToken\");\n\n  useEffect(() => {\n    if (admin && !adminExist) {\n      history.replace(\"/admin/login\");\n    }\n    if (!admin && !userExist) {\n      history.replace(\"/\");\n    }\n  }, [userExist, adminExist]);\n\n  useEffect(() => {\n    dispatch(admin ? fetchAdminOrders() : fetchOrders());\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      {contentLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Typography className={classes.heading} variant=\"h3\">\n            Orders\n          </Typography>\n\n          {orders.length ? null : <Typography>No orders.</Typography>}\n\n          <Grid container spacing={4}>\n            {orders.map((order) => {\n              const items = order?.items?.reduce(\n                (total, item) => item.quantity + total,\n                0\n              );\n\n              return (\n                <Grid key={order._id} item md={4} sm={6} xs={12}>\n                  <Card className={classes.card}>\n                    <Typography>\n                      <span>ID</span> <Chip label={order._id} size=\"small\" />\n                    </Typography>\n                    <Typography>\n                      <span>Products</span> {order.items.length}\n                    </Typography>\n                    <Typography>\n                      <span>Items</span> {items}\n                    </Typography>\n                    <Typography>\n                      <span>Date</span> {moment(order.date).fromNow()}\n                    </Typography>\n                    <Typography>\n                      <span>Price</span> ${order.price}\n                    </Typography>\n                    <Typography>\n                      <span>Status</span>{\" \"}\n                      <Chip\n                        style={{ color: \"white\" }}\n                        label={order.status}\n                        size=\"small\"\n                        color=\"primary\"\n                      />\n                    </Typography>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      size=\"small\"\n                      onClick={() =>\n                        admin\n                          ? history.push(`/admin/order/${order._id}`)\n                          : history.push(`/order/${order._id}`)\n                      }\n                    >\n                      Details\n                    </Button>\n                  </Card>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </>\n      )}\n    </Container>\n  );\n};\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/CategoryForm/index.js",["358"],"import { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport {} from \"@material-ui/icons\";\nimport { useStyles } from \"./style\";\nimport { createCategory, editCategory } from \"../../../redux/slices/admin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Axios } from \"../../../api/instances\";\nimport * as Api from \"../../../api/endpoints\";\nimport { withAdminAuth } from \"../../../hoc/withAdminAuth\";\nimport { Loader } from \"../../../components/Loader/\";\n\nexport const CategoryForm = withAdminAuth(true)(({ edit }) => {\n  const classes = useStyles();\n  const { id } = useParams();\n  const [name, setName] = useState(\"\");\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.admin.authLoading);\n  const [categoryLoading, setCategoryLoading] = useState(false);\n\n  const changeNameHandler = (e) => setName(e.target.value);\n\n  const createCategoryHandler = (e) => {\n    e.preventDefault();\n    if (edit) dispatch(editCategory({ id, name }));\n    else dispatch(createCategory({ name }));\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (edit) {\n        console.log(\"Category\");\n        setCategoryLoading(true);\n        const res = await Axios.get(Api.GET_CATEGORY(id));\n        setName(res.data.category.name);\n        setCategoryLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      {categoryLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Typography variant=\"h3\" className={classes.heading}>\n            {edit ? \"Edit\" : \"Create\"} Product\n          </Typography>\n\n          <form className={classes.form} onSubmit={createCategoryHandler}>\n            <TextField label=\"Name\" value={name} onChange={changeNameHandler} />\n            <Button\n              style={{ color: \"white\" }}\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              type=\"submit\"\n              endIcon={\n                loading ? <CircularProgress size={20} color=\"primary\" /> : null\n              }\n            >\n              {edit ? \"Edit\" : \"Create\"}\n            </Button>\n          </form>\n        </>\n      )}\n    </Container>\n  );\n});\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Header/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Search/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Sidebar/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/CategoryForm/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/hoc/withAdminAuth.js",["359"],"import { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const withAdminAuth = (auth) => (WrappedComponent) => {\n  return (props) => {\n    const { replace } = useHistory();\n    const admin = useSelector((state) => state.admin.admin);\n\n    useEffect(() => {\n      if (auth && !admin) replace(\"/admin/login\");\n      if (!auth && admin) replace(\"/admin\");\n    }, [admin]);\n\n    return <WrappedComponent {...props} />;\n  };\n};\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/pages/Orders/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Sidebar/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/pages/Order/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/AddReview/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/AddReview/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/AdminHeader/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Categories/index.js",["360"],"import { useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  Button,\n  TableCell,\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  IconButton,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Add, EditOutlined, DeleteOutlineOutlined } from \"@material-ui/icons\";\nimport { useStyles } from \"./style\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCategories, deleteCategory } from \"../../../redux/slices/admin\";\nimport { withAdminAuth } from \"../../../hoc/withAdminAuth\";\nimport { Loader } from \"../../../components/Loader/\";\n\nexport const Categories = withAdminAuth(true)((props) => {\n  const classes = useStyles();\n  const { push } = useHistory();\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.admin.contentLoading);\n  const categories = useSelector((state) => state.admin.categories);\n  const deleteLoading = useSelector((state) => state.admin.authLoading);\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Typography variant=\"h3\" className={classes.heading}>\n            Categories\n          </Typography>\n\n          <div className={classes.container}>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{ marginLeft: \"auto\", display: \"flex\" }}\n              size=\"large\"\n              startIcon={<Add />}\n              onClick={() => push(\"/admin/create-category\")}\n            >\n              Create\n            </Button>\n\n            <TableContainer\n              component={Paper}\n              className={classes.tableContainer}\n            >\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  {categories.map(({ _id, name }) => (\n                    <TableRow key={_id}>\n                      <TableCell>{name}</TableCell>\n                      <TableCell align=\"right\">\n                        {deleteLoading ? (\n                          <CircularProgress size={20} color=\"primary\" />\n                        ) : (\n                          <>\n                            <IconButton\n                              onClick={() =>\n                                push(`/admin/edit-category/${_id}`)\n                              }\n                              color=\"primary\"\n                              size=\"small\"\n                              style={{ marginRight: \"10px\" }}\n                            >\n                              <EditOutlined />\n                            </IconButton>\n                            <IconButton\n                              color=\"secondary\"\n                              size=\"small\"\n                              onClick={() => dispatch(deleteCategory(_id))}\n                            >\n                              <DeleteOutlineOutlined />\n                            </IconButton>\n                          </>\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n        </>\n      )}\n    </Container>\n  );\n});\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/ProductForm/index.js",["361","362"],"import { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Typography,\n  TextField,\n  MenuItem,\n  FormControlLabel,\n  Switch,\n  Button,\n  InputAdornment,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { CameraAltOutlined } from \"@material-ui/icons\";\nimport { useStyles } from \"./style\";\nimport { AdminAxios, Axios } from \"../../../api/instances\";\nimport * as Api from \"../../../api/endpoints\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createProduct, editProduct } from \"../../../redux/slices/admin\";\nimport { useParams } from \"react-router-dom\";\nimport { withAdminAuth } from \"../../../hoc/withAdminAuth\";\nimport { Loader } from \"../../../components/Loader/\";\n\nexport const ProductForm = withAdminAuth(true)(({ edit }) => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const [productLoading, setProductLoading] = useState(false);\n  const loading = useSelector((state) => state.admin.authLoading);\n  const classes = useStyles();\n  const [categories, setCategories] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState();\n  const [status, setStatus] = useState(\"PUBLIC\");\n  const [src, setSrc] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [price, setPrice] = useState();\n  const [quantity, setQuantity] = useState();\n\n  const changeNameHandler = (e) => setName(e.target.value);\n  const changeDescriptionHandler = (e) => setDescription(e.target.value);\n  const changeCategoryHandler = (e) => setCategory(e.target.value);\n  const changePriceHandler = (e) => setPrice(e.target.value);\n  const changeQuantityHandler = (e) => setQuantity(e.target.value);\n  const changeStatusHandler = () => {\n    setStatus(status === \"PUBLIC\" ? \"PRIVATE\" : \"PUBLIC\");\n  };\n  const changeImageHandler = async (e) => {\n    const file = e?.target?.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        setFile(file);\n        setSrc(reader.result);\n      };\n    }\n  };\n\n  const setProductData = ({\n    name,\n    description,\n    category,\n    status,\n    image,\n    price,\n    quantity,\n  }) => {\n    setName(name);\n    setDescription(description);\n    setCategory(category._id);\n    setStatus(status);\n    setPrice(price);\n    setQuantity(quantity);\n    setSrc(image);\n    setFile(image);\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (edit) {\n        setProductLoading(true);\n        const productResponse = await AdminAxios.get(Api.ADMIN_PRODUCT(id));\n        setProductData(productResponse.data.product);\n        setProductLoading(false);\n      }\n    })();\n\n    (async () => {\n      const categoriesResponse = await Axios.get(Api.GET_CATEGORIES);\n      setCategories(categoriesResponse.data.categories);\n    })();\n  }, []);\n\n  const createProductHandler = (e) => {\n    e.preventDefault();\n    if (edit) {\n      dispatch(\n        editProduct({\n          id,\n          name,\n          description,\n          file,\n          status,\n          category,\n          price,\n          quantity,\n        })\n      );\n    } else {\n      dispatch(\n        createProduct({\n          name,\n          description,\n          file,\n          status,\n          category,\n          price,\n          quantity,\n        })\n      );\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      {productLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Typography variant=\"h3\" className={classes.heading}>\n            {edit ? \"Edit\" : \"Create\"} Product\n          </Typography>\n          <form className={classes.form} onSubmit={createProductHandler}>\n            <TextField\n              label=\"Name\"\n              className={classes.textField}\n              value={name}\n              onChange={changeNameHandler}\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Description\"\n              multiline\n              rows={4}\n              value={description}\n              onChange={changeDescriptionHandler}\n            />\n            <TextField\n              select\n              label=\"Category\"\n              value={category}\n              onChange={changeCategoryHandler}\n            >\n              {categories.map(({ _id, name }) => (\n                <MenuItem key={_id} value={_id}>\n                  {name}\n                </MenuItem>\n              ))}\n            </TextField>\n            <input\n              type=\"file\"\n              id=\"fileInput\"\n              accept=\"image/png, image/jpg, image/jpeg, image/webp\"\n              hidden\n              onChange={changeImageHandler}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ color: \"white\" }}\n              component=\"label\"\n              htmlFor=\"fileInput\"\n              endIcon={<CameraAltOutlined />}\n              size=\"small\"\n            >\n              Upload Image\n            </Button>\n            <div className={classes.img}>\n              <img src={src} />\n            </div>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={status === \"PUBLIC\"}\n                  onChange={changeStatusHandler}\n                />\n              }\n              label={status}\n            />\n            <TextField\n              type=\"number\"\n              label=\"Price\"\n              value={price}\n              onChange={changePriceHandler}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">$</InputAdornment>\n                ),\n              }}\n            />\n            <TextField\n              type=\"number\"\n              label=\"Quantity\"\n              value={quantity}\n              onChange={changeQuantityHandler}\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ color: \"white\" }}\n              size=\"large\"\n              disabled={loading}\n              endIcon={\n                loading ? <CircularProgress size={20} color=\"primary\" /> : null\n              }\n            >\n              {edit ? \"Edit\" : \"Create\"}\n            </Button>\n          </form>\n        </>\n      )}\n    </Container>\n  );\n});\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Products/index.js",["363","364","365","366","367","368"],"import { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Container,\n  Typography,\n  Table,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Paper,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  EditOutlined,\n  DeleteOutlineOutlined,\n  Add,\n  KeyboardArrowDown,\n} from \"@material-ui/icons\";\nimport { useStyles } from \"./style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProducts } from \"../../../redux/slices/admin\";\nimport { Row } from \"./Row\";\nimport { useHistory } from \"react-router-dom\";\nimport { withAdminAuth } from \"../../../hoc/withAdminAuth\";\nimport { Loader } from \"../../../components/Loader/\";\n\nexport const Products = withAdminAuth(true)((props) => {\n  const { push } = useHistory();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const products = useSelector((state) => state.admin.products);\n  const loading = useSelector((state) => state.admin.contentLoading);\n\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Typography variant=\"h3\" className={classes.heading}>\n            Products\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{ marginLeft: \"auto\", display: \"flex\" }}\n            size=\"large\"\n            startIcon={<Add />}\n            onClick={() => push(\"/admin/create-product\")}\n          >\n            Create\n          </Button>\n\n          <TableContainer component={Paper} className={classes.tableContainer}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Image</TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Price</TableCell>\n                  <TableCell>Quantity</TableCell>\n                  <TableCell>Sold</TableCell>\n                  <TableCell>Status</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {products.map((product) => (\n                  <Row product={product} />\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </>\n      )}\n    </Container>\n  );\n});\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Home/index.js",["369","370"],"import {\n  Container,\n  AppBar,\n  Toolbar,\n  Typography,\n  Paper,\n  Grid,\n} from \"@material-ui/core\";\nimport {} from \"@material-ui/icons\";\nimport { useStyles } from \"./style\";\nimport { withAdminAuth } from \"../../../hoc/withAdminAuth\";\nimport { Link } from \"react-router-dom\";\n\nexport const Home = withAdminAuth(true)((props) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={3}>\n          <Grid item md={2}>\n            <Paper className={classes.paper}>\n              <Typography component={Link} to=\"/admin/products\" variant=\"h6\">\n                Products\n              </Typography>\n            </Paper>\n          </Grid>\n          <Grid item md={2}>\n            <Paper className={classes.paper}>\n              <Typography component={Link} to=\"/admin/categories\" variant=\"h6\">\n                Categories\n              </Typography>\n            </Paper>\n          </Grid>\n          <Grid item md={2}>\n            <Paper className={classes.paper}>\n              <Typography component={Link} to=\"/admin/orders\" variant=\"h6\">\n                Orders\n              </Typography>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n});\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Login/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Checkout/index.js",["371","372","373"],"import { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Stepper,\n  Step,\n  StepLabel,\n  Typography,\n} from \"@material-ui/core\";\nimport {} from \"@material-ui/icons\";\nimport { useStyles } from \"./style\";\nimport { Payment } from \"./Payment\";\nimport { Shipping } from \"./Shipping\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPaymentIntent } from \"../../../redux/slices/order\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { NotificationManager } from \"react-notifications\";\nimport { UserAxios } from \"../../../api/instances\";\nimport * as Api from \"../../../api/endpoints\";\nimport { useHistory } from \"react-router-dom\";\nimport { emptyCart } from \"../../../redux/slices/user\";\nimport { withUserAuth } from \"../../../hoc/withUserAuth\";\nimport { Loader } from \"../../../components/Loader/\";\n\nconst stripePromise = loadStripe(\n  \"pk_test_aJrkyPeP7gf9DVWQLg4VxCKQ\"\n);\n\nconst getSteps = () => [\"Shipping Address\", \"Payment Info\"];\n\nconst Checkout = withUserAuth(true)((props) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const contentLoading = useSelector((state) => state.orders.contentLoading);\n  const clientSecret = useSelector((state) => state.orders.clientSecret);\n  const [activeStep, setActiveStep] = useState(0);\n  const [skipped, setSkipped] = useState(new Set());\n  const steps = getSteps();\n  const [country, setCountry] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [address1, setAddress1] = useState(\"\");\n  const [address2, setAddress2] = useState(\"\");\n  const [zipCode, setZipCode] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n  const [processing, setProcessing] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(createPaymentIntent());\n  }, []);\n\n  const changeCountryHandler = (e) => setCountry(e.target.value);\n  const changeCityHandler = (e) => setCity(e.target.value);\n  const changeAddress1Handler = (e) => setAddress1(e.target.value);\n  const changeAddress2Handler = (e) => setAddress2(e.target.value);\n  const changeZipCodeHandler = (e) => {\n    if (isNaN(Number(e.target.value))) return;\n    setZipCode(e.target.value.trim());\n  };\n\n  const isStepSkipped = (step) => skipped.has(step);\n\n  const nextStepHandler = () => {\n    const newSkipped = [...skipped.values(), activeStep];\n    setSkipped(new Set([...newSkipped]));\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const paymentHandler = async (e) => {\n    e.preventDefault();\n    try {\n      setProcessing(true);\n\n      const payload = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement),\n        },\n      });\n\n      if (payload.error) {\n        setProcessing(false);\n        return NotificationManager.error(payload.error.message);\n      }\n      const res = await UserAxios.post(Api.CREATE_ORDER, {\n        country,\n        city,\n        address1,\n        address2,\n        zipCode,\n      });\n\n      dispatch(emptyCart());\n\n      NotificationManager.success(\"Order placed!\");\n\n      history.replace(\"/\");\n      setProcessing(false);\n    } catch (error) {\n      NotificationManager.error(error.message);\n    }\n    setProcessing(false);\n  };\n\n  const getStepContent = (step) => {\n    switch (step) {\n      case 0:\n        return (\n          <Shipping\n            country={country}\n            city={city}\n            address1={address1}\n            address2={address2}\n            zipCode={zipCode}\n            changeCountryHandler={changeCountryHandler}\n            changeCityHandler={changeCityHandler}\n            changeAddress1Handler={changeAddress1Handler}\n            changeAddress2Handler={changeAddress2Handler}\n            changeZipCodeHandler={changeZipCodeHandler}\n            nextStepHandler={nextStepHandler}\n          />\n        );\n      case 1:\n        return (\n          <Payment paymentHandler={paymentHandler} processing={processing} />\n        );\n      default:\n        return <p>No Content</p>;\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      {contentLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label, index) => {\n              let stepProps = {};\n              if (isStepSkipped(index)) {\n                stepProps.completed = true;\n              }\n\n              return (\n                <Step key={label} {...stepProps}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              );\n            })}\n          </Stepper>\n\n          {getStepContent(activeStep)}\n        </>\n      )}\n    </Container>\n  );\n});\n\nconst Component = () => (\n  <Elements stripe={stripePromise}>\n    <Checkout />\n  </Elements>\n);\n\nexport { Component as Checkout };\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Cart/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Profile/index.js",["374"],"import {\n  Container,\n  Typography,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\nimport {} from \"@material-ui/icons\";\nimport { useStyles } from \"./style\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { withUserAuth } from \"../../../hoc/withUserAuth\";\n\nexport const Profile = withUserAuth(true)((props) => {\n  const classes = useStyles();\n  const { push } = useHistory();\n  const user = useSelector((state) => state.users.user);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Typography variant=\"h3\" className={classes.heading}>\n        Your Profile\n      </Typography>\n\n      <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell component=\"th\">Name</TableCell>\n              <TableCell>{user?.name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell component=\"th\">Email</TableCell>\n              <TableCell>{user?.email}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Button\n                  onClick={() => push(\"/edit-profile\")}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                >\n                  Edit\n                </Button>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n});\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/EditProfile/index.js",["375"],"import { useState } from \"react\";\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Paper,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport {} from \"@material-ui/icons\";\nimport { useStyles } from \"../Login/style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editUser } from \"../../../redux/slices/user\";\nimport { useHistory } from \"react-router-dom\";\nimport { withUserAuth } from \"../../../hoc/withUserAuth\";\n\nexport const EditProfile = withUserAuth(true)((props) => {\n  const classes = useStyles();\n  const user = useSelector((state) => state.users.user);\n  const [name, setName] = useState(user?.name);\n  const [email, setEmail] = useState(user?.email);\n  const [password, setPassword] = useState(user?.password);\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.users.authLoading);\n\n  const changeNameHandler = (e) => setName(e.target.value);\n  const changeEmailHandler = (e) => setEmail(e.target.value);\n  const changePasswordHandler = (e) => setPassword(e.target.value);\n\n  const editHandler = (e) => {\n    e.preventDefault();\n    dispatch(editUser({ name, email, password }));\n  };\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.root}>\n      <Typography variant=\"h3\" className={classes.heading}>\n        Edit Profile\n      </Typography>\n\n      <Paper component=\"form\" className={classes.form} onSubmit={editHandler}>\n        <TextField\n          label=\"Name\"\n          className={classes.textField}\n          value={name}\n          onChange={changeNameHandler}\n        />\n        <TextField\n          label=\"Email\"\n          type=\"email\"\n          className={classes.textField}\n          value={email}\n          onChange={changeEmailHandler}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          className={classes.textField}\n          value={password}\n          onChange={changePasswordHandler}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ color: \"white\" }}\n          disabled={loading}\n          endIcon={\n            loading ? <CircularProgress size={20} color=\"primary\" /> : null\n          }\n        >\n          Edit\n        </Button>\n      </Paper>\n    </Container>\n  );\n});\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Signup/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Login/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Shop/index.js",["376"],"import { useEffect } from \"react\";\nimport { Products } from \"../../../components/Products/\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAllProducts } from \"../../../redux/slices/product\";\nimport { Container, Typography, Box } from \"@material-ui/core\";\nimport { useStyles } from \"./style\";\nimport { Filter } from \"../../../components/Filter/\";\nimport { filterProducts } from \"../../../utils\";\nimport { Loader } from \"../../../components/Loader/\";\n\nexport const Shop = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const products = useSelector((state) => state.products.products);\n  const filter = useSelector((state) => state.products.filter);\n  const loading = useSelector((state) => state.products.loading);\n\n  useEffect(() => {\n    dispatch(fetchAllProducts());\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Typography variant=\"h3\" className={classes.heading}>\n            Our Products\n          </Typography>\n          <Box marginBottom={5}>\n            <Filter />\n          </Box>\n          <Products products={filterProducts(products, filter)} />\n        </>\n      )}\n    </Container>\n  );\n};\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/ProductPage/index.js",["377","378","379"],"import { useEffect } from \"react\";\nimport { useStyles, BigTooltip } from \"./style\";\nimport {\n  Container,\n  Grid,\n  Typography,\n  Button,\n  Badge,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  Avatar,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProduct } from \"../../../redux/slices/product\";\nimport moment from \"moment\";\nimport { addToCart } from \"../../../redux/slices/user\";\nimport { Review } from \"../../../components/Review/\";\nimport { Loader } from \"../../../components/Loader/\";\n\nexport const ProductPage = () => {\n  const dispatch = useDispatch();\n  const product = useSelector((state) => state.products.product);\n  const cartLoading = useSelector((state) => state.users.cartLoading);\n  const loading = useSelector((state) => state.products.loading);\n  const { id } = useParams();\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(fetchProduct(id));\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.root}>\n      {loading || !product ? (\n        <Loader />\n      ) : (\n        <>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              <div className={classes.img}>\n                <img src={product.image} />\n              </div>\n            </Grid>\n\n            <Grid item md={6} xs={12}>\n              <Typography variant=\"h3\" className={classes.heading}>\n                {product.name}\n              </Typography>\n\n              <BigTooltip\n                title={`${product.rating?.toFixed(1) || \"No\"} Rating`}\n                placement=\"top-start\"\n                arrow\n              >\n                <div className={classes.rating}>\n                  <Rating precision=\"0.1\" value={product.rating} readOnly />\n                  <Typography>({product.reviews.length} Reviews)</Typography>\n                </div>\n              </BigTooltip>\n\n              <Typography\n                variant=\"h5\"\n                color=\"primary\"\n                className={classes.price}\n              >\n                ${product.price}\n              </Typography>\n              <Typography>{product.description}</Typography>\n              <Badge\n                badgeContent=\"Out of stock\"\n                color=\"primary\"\n                className={classes.badge}\n                invisible={product.quantity}\n              >\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  disabled={!product.quantity || cartLoading}\n                  onClick={() => dispatch(addToCart(product._id))}\n                  endIcon={\n                    cartLoading ? (\n                      <CircularProgress size={20} color=\"primary\" />\n                    ) : null\n                  }\n                >\n                  Add to cart\n                </Button>\n              </Badge>\n            </Grid>\n          </Grid>\n\n          <TableContainer component={Paper} className={classes.tableContainer}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Product Details</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                <TableRow>\n                  <TableCell component=\"th\">Category</TableCell>\n                  <TableCell>{product.category.name}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell component=\"th\">Created</TableCell>\n                  <TableCell>{moment(product.created).fromNow()}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell component=\"th\">Quantity in stock</TableCell>\n                  <TableCell>{product.quantity}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell component=\"th\">Sold</TableCell>\n                  <TableCell>{product.sold}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          <Typography variant=\"h5\">\n            Reviews ({product.reviews.length})\n          </Typography>\n          {product.reviews.map((review) => (\n            <Review key={review._id} review={review} />\n          ))}\n        </>\n      )}\n    </Container>\n  );\n};\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/CategoryProducts/index.js",["380"],"import { useEffect } from \"react\";\nimport { Products } from \"../../../components/Products/\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCategoryProducts } from \"../../../redux/slices/product\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"./style\";\nimport { Loader } from \"../../../components/Loader/\";\n\nexport const CategoryProducts = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { id } = useParams();\n  const products = useSelector((state) => state.products.products);\n  const loading = useSelector((state) => state.products.loading);\n\n  useEffect(() => {\n    dispatch(fetchCategoryProducts(id));\n  }, [id]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Typography variant=\"h3\" className={classes.heading}>\n            Products related to '{products[0]?.category?.name}'\n          </Typography>\n          <Products products={products} />\n        </>\n      )}\n    </Container>\n  );\n};\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/SearchPage/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Home/index.js",["381"],"import { useEffect } from \"react\";\nimport { Container, Typography, Hidden, Box } from \"@material-ui/core\";\nimport { Hero } from \"../../../components/Hero/\";\nimport { Products } from \"../../../components/Products/\";\nimport { useStyles } from \"./style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAllProducts } from \"../../../redux/slices/product\";\nimport { Search } from \"../../../components/Search/\";\nimport { Filter } from \"../../../components/Filter/\";\nimport { filterProducts } from \"../../../utils\";\nimport { Loader } from \"../../../components/Loader/\";\n\nexport const Home = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const products = useSelector((state) => state.products.products);\n  const filter = useSelector((state) => state.products.filter);\n  const loading = useSelector((state) => state.products.loading);\n\n  useEffect(() => {\n    dispatch(fetchAllProducts());\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Hero />\n\n      <Typography\n        variant=\"h3\"\n        style={{ fontWeight: \"bold\", marginBottom: \"30px\" }}\n        id=\"products\"\n      >\n        Our Products\n      </Typography>\n\n      <Hidden mdUp>\n        <Search className={classes.input} />\n      </Hidden>\n\n      <Box marginBottom={5}>\n        <Filter />\n      </Box>\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <Products products={filterProducts(products, filter)} />\n      )}\n    </Container>\n  );\n};\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Categories/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/ProductForm/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Products/Row.js",["382","383"],"import { useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Collapse,\n  Typography,\n  IconButton,\n  Box,\n  Paper,\n  Button,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport {\n  KeyboardArrowDown,\n  KeyboardArrowUp,\n  EditOutlined,\n  DeleteOutlineOutlined,\n} from \"@material-ui/icons\";\nimport { useStyles } from \"./style\";\nimport moment from \"moment\";\nimport { Reviews } from \"./Reviews\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteProduct } from \"../../../redux/slices/admin\";\n\nexport const Row = ({ product }) => {\n  const { push } = useHistory();\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.admin.authLoading);\n  const [openReviews, setOpenReviews] = useState(false);\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => setOpenReviews(false);\n  const handleOpen = () => setOpenReviews(true);\n\n  const deleteProductHandler = () => {\n    dispatch(deleteProduct(product._id));\n  };\n\n  return (\n    <>\n      <TableRow key={product._id} className={classes.row}>\n        <TableCell>\n          <IconButton size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n          </IconButton>\n        </TableCell>\n        <TableCell>\n          <div className={classes.img}>\n            <img src={product.image} />\n          </div>\n        </TableCell>\n        <TableCell>{product.name}</TableCell>\n        <TableCell>${product.price}</TableCell>\n        <TableCell>{product.quantity}</TableCell>\n        <TableCell>{product.sold}</TableCell>\n        <TableCell>{product.status}</TableCell>\n        <TableCell>\n          {loading ? (\n            <CircularProgress size={20} color=\"primary\" />\n          ) : (\n            <>\n              <IconButton\n                onClick={() => push(`/admin/edit-product/${product._id}`)}\n                color=\"primary\"\n                size=\"small\"\n                style={{ marginRight: \"10px\" }}\n              >\n                <EditOutlined />\n              </IconButton>\n              <IconButton\n                color=\"secondary\"\n                size=\"small\"\n                onClick={deleteProductHandler}\n              >\n                <DeleteOutlineOutlined />\n              </IconButton>\n            </>\n          )}\n        </TableCell>\n      </TableRow>\n\n      <TableRow>\n        <TableCell colSpan={8} style={{ paddingBottom: 0, paddingTop: 0 }}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box marginTop={2} paddingBottom={2}>\n              <Typography variant=\"h5\">More Detail</Typography>\n              <Table\n                size=\"small\"\n                style={{ marginTop: \"10px\" }}\n                component={Paper}\n              >\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Category</TableCell>\n                    <TableCell>Created</TableCell>\n                    <TableCell>Rating</TableCell>\n                    <TableCell>Reviews</TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  <TableCell>{product.description}</TableCell>\n                  <TableCell>{product.category.name}</TableCell>\n                  <TableCell>{moment(product.created).fromNow()}</TableCell>\n                  <TableCell>\n                    {product.rating?.toFixed(1) || \"No rating\"}\n                  </TableCell>\n                  <TableCell>{product.reviews.length}</TableCell>\n                  <TableCell>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"small\"\n                      style={{ color: \"white\" }}\n                      onClick={handleOpen}\n                    >\n                      View Reviews\n                    </Button>\n                  </TableCell>\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n\n      <Reviews\n        open={openReviews}\n        onClose={handleClose}\n        reviews={product.reviews}\n      />\n    </>\n  );\n};\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Products/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Home/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Login/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Checkout/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Checkout/Payment.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Checkout/Shipping.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Profile/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/hoc/withUserAuth.js",["384"],"import { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const withUserAuth = (auth) => (WrappedComponent) => {\n  return (props) => {\n    const { replace } = useHistory();\n    const user = useSelector((state) => state.users.user);\n\n    useEffect(() => {\n      if (auth && !user) replace(\"/\");\n      if (!auth && user) replace(\"/\");\n    }, [user]);\n\n    return <WrappedComponent {...props} />;\n  };\n};\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Cart/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Shop/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/ProductPage/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/CategoryProducts/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/SearchPage/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/clientPages/Home/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Filter/index.js",["385"],"import { useState, useEffect } from \"react\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport {} from \"@material-ui/icons\";\nimport { useStyles } from \"./style\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { applyFilter } from \"../../redux/slices/product\";\n\nexport const Filter = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const categories = useSelector((state) => state.categories.categories);\n  const [filter, setFilter] = useState(\"All\");\n\n  useEffect(() => {\n    dispatch(applyFilter(\"All\"));\n  }, []);\n\n  const changeFilterHandler = (e) => {\n    setFilter(e.target.value);\n    dispatch(applyFilter(e.target.value));\n  };\n\n  return (\n    <TextField\n      select\n      label=\"Filter\"\n      value={filter}\n      onChange={changeFilterHandler}\n      className={classes.textField}\n    >\n      <MenuItem value=\"All\">All</MenuItem>\n      {categories.map((category) => (\n        <MenuItem value={category.name} key={category.name}>\n          {category.name}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n};\n","/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Products/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Review/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/pages/adminPages/Products/Reviews.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Hero/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Filter/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Review/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Hero/style.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Product/index.js",[],"/Users/mac/Documents/projects/react-app/ecommerce-frontend-master/src/components/Product/style.js",[],{"ruleId":"386","replacedBy":"387"},{"ruleId":"388","replacedBy":"389"},{"ruleId":"390","severity":1,"message":"391","line":27,"column":40,"nodeType":"392","endLine":27,"endColumn":42,"suggestions":"393"},{"ruleId":"394","severity":1,"message":"395","line":6,"column":14,"nodeType":"396","messageId":"397","endLine":6,"endColumn":16},{"ruleId":"394","severity":1,"message":"395","line":7,"column":61,"nodeType":"396","messageId":"397","endLine":7,"endColumn":63},{"ruleId":"398","severity":1,"message":"399","line":4,"column":3,"nodeType":"400","messageId":"401","endLine":4,"endColumn":22},{"ruleId":"402","severity":1,"message":"403","line":27,"column":15,"nodeType":"404","messageId":"405","endLine":27,"endColumn":30},{"ruleId":"394","severity":1,"message":"406","line":250,"column":28,"nodeType":"396","messageId":"397","endLine":250,"endColumn":30},{"ruleId":"394","severity":1,"message":"406","line":295,"column":28,"nodeType":"396","messageId":"397","endLine":295,"endColumn":30},{"ruleId":"402","severity":1,"message":"403","line":46,"column":15,"nodeType":"404","messageId":"405","endLine":46,"endColumn":30},{"ruleId":"390","severity":1,"message":"407","line":20,"column":6,"nodeType":"392","endLine":20,"endColumn":8,"suggestions":"408"},{"ruleId":"390","severity":1,"message":"407","line":20,"column":6,"nodeType":"392","endLine":20,"endColumn":8,"suggestions":"409"},{"ruleId":"390","severity":1,"message":"407","line":45,"column":6,"nodeType":"392","endLine":45,"endColumn":8,"suggestions":"410"},{"ruleId":"390","severity":1,"message":"411","line":64,"column":6,"nodeType":"392","endLine":64,"endColumn":29,"suggestions":"412"},{"ruleId":"390","severity":1,"message":"413","line":68,"column":6,"nodeType":"392","endLine":68,"endColumn":37,"suggestions":"414"},{"ruleId":"394","severity":1,"message":"395","line":156,"column":42,"nodeType":"396","messageId":"397","endLine":156,"endColumn":44},{"ruleId":"390","severity":1,"message":"411","line":39,"column":6,"nodeType":"392","endLine":39,"endColumn":29,"suggestions":"415"},{"ruleId":"390","severity":1,"message":"413","line":43,"column":6,"nodeType":"392","endLine":43,"endColumn":8,"suggestions":"416"},{"ruleId":"390","severity":1,"message":"417","line":45,"column":6,"nodeType":"392","endLine":45,"endColumn":8,"suggestions":"418"},{"ruleId":"390","severity":1,"message":"419","line":13,"column":8,"nodeType":"392","endLine":13,"endColumn":15,"suggestions":"420"},{"ruleId":"390","severity":1,"message":"407","line":34,"column":6,"nodeType":"392","endLine":34,"endColumn":8,"suggestions":"421"},{"ruleId":"390","severity":1,"message":"417","line":92,"column":6,"nodeType":"392","endLine":92,"endColumn":8,"suggestions":"422"},{"ruleId":"423","severity":1,"message":"424","line":179,"column":15,"nodeType":"425","endLine":179,"endColumn":32},{"ruleId":"398","severity":1,"message":"426","line":1,"column":21,"nodeType":"400","messageId":"401","endLine":1,"endColumn":29},{"ruleId":"398","severity":1,"message":"427","line":13,"column":3,"nodeType":"400","messageId":"401","endLine":13,"endColumn":13},{"ruleId":"398","severity":1,"message":"428","line":16,"column":3,"nodeType":"400","messageId":"401","endLine":16,"endColumn":15},{"ruleId":"398","severity":1,"message":"429","line":17,"column":3,"nodeType":"400","messageId":"401","endLine":17,"endColumn":24},{"ruleId":"398","severity":1,"message":"430","line":19,"column":3,"nodeType":"400","messageId":"401","endLine":19,"endColumn":20},{"ruleId":"390","severity":1,"message":"407","line":38,"column":6,"nodeType":"392","endLine":38,"endColumn":8,"suggestions":"431"},{"ruleId":"398","severity":1,"message":"432","line":3,"column":3,"nodeType":"400","messageId":"401","endLine":3,"endColumn":9},{"ruleId":"398","severity":1,"message":"433","line":4,"column":3,"nodeType":"400","messageId":"401","endLine":4,"endColumn":10},{"ruleId":"398","severity":1,"message":"434","line":7,"column":3,"nodeType":"400","messageId":"401","endLine":7,"endColumn":13},{"ruleId":"390","severity":1,"message":"407","line":52,"column":6,"nodeType":"392","endLine":52,"endColumn":8,"suggestions":"435"},{"ruleId":"398","severity":1,"message":"436","line":86,"column":13,"nodeType":"400","messageId":"401","endLine":86,"endColumn":16},{"ruleId":"398","severity":1,"message":"437","line":6,"column":3,"nodeType":"400","messageId":"401","endLine":6,"endColumn":12},{"ruleId":"398","severity":1,"message":"438","line":14,"column":10,"nodeType":"400","messageId":"401","endLine":14,"endColumn":20},{"ruleId":"390","severity":1,"message":"407","line":20,"column":6,"nodeType":"392","endLine":20,"endColumn":8,"suggestions":"439"},{"ruleId":"398","severity":1,"message":"440","line":16,"column":3,"nodeType":"400","messageId":"401","endLine":16,"endColumn":9},{"ruleId":"390","severity":1,"message":"441","line":38,"column":6,"nodeType":"392","endLine":38,"endColumn":8,"suggestions":"442"},{"ruleId":"423","severity":1,"message":"424","line":49,"column":17,"nodeType":"425","endLine":49,"endColumn":44},{"ruleId":"390","severity":1,"message":"407","line":19,"column":6,"nodeType":"392","endLine":19,"endColumn":10,"suggestions":"443"},{"ruleId":"390","severity":1,"message":"407","line":22,"column":6,"nodeType":"392","endLine":22,"endColumn":8,"suggestions":"444"},{"ruleId":"398","severity":1,"message":"445","line":4,"column":3,"nodeType":"400","messageId":"401","endLine":4,"endColumn":17},{"ruleId":"423","severity":1,"message":"424","line":55,"column":13,"nodeType":"425","endLine":55,"endColumn":40},{"ruleId":"390","severity":1,"message":"419","line":13,"column":8,"nodeType":"392","endLine":13,"endColumn":14,"suggestions":"446"},{"ruleId":"390","severity":1,"message":"407","line":16,"column":6,"nodeType":"392","endLine":16,"endColumn":8,"suggestions":"447"},"no-native-reassign",["448"],"no-negated-in-lhs",["449"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["450"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'createEntityAdapter' is defined but never used.","Identifier","unusedVar","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["451"],["452"],["453"],"React Hook useEffect has missing dependencies: 'admin' and 'history'. Either include them or remove the dependency array.",["454"],"React Hook useEffect has missing dependencies: 'admin' and 'dispatch'. Either include them or remove the dependency array.",["455"],["456"],["457"],"React Hook useEffect has missing dependencies: 'edit' and 'id'. Either include them or remove the dependency array.",["458"],"React Hook useEffect has a missing dependency: 'replace'. Either include it or remove the dependency array.",["459"],["460"],["461"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'IconButton' is defined but never used.","'EditOutlined' is defined but never used.","'DeleteOutlineOutlined' is defined but never used.","'KeyboardArrowDown' is defined but never used.",["462"],"'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.",["463"],"'res' is assigned a value but never used.","'TableHead' is defined but never used.","'useHistory' is defined but never used.",["464"],"'Avatar' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["465"],["466"],["467"],"'TableContainer' is defined but never used.",["468"],["469"],"no-global-assign","no-unsafe-negation",{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"472","fix":"474"},{"desc":"472","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"476","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"472","fix":"487"},{"desc":"483","fix":"488"},{"desc":"472","fix":"489"},{"desc":"472","fix":"490"},{"desc":"472","fix":"491"},{"desc":"492","fix":"493"},{"desc":"492","fix":"494"},{"desc":"472","fix":"495"},{"desc":"496","fix":"497"},{"desc":"472","fix":"498"},"Update the dependencies array to be: [history]",{"range":"499","text":"500"},"Update the dependencies array to be: [dispatch]",{"range":"501","text":"502"},{"range":"503","text":"502"},{"range":"504","text":"502"},"Update the dependencies array to be: [userExist, adminExist, admin, history]",{"range":"505","text":"506"},"Update the dependencies array to be: [id, history.location.pathname, dispatch, admin]",{"range":"507","text":"508"},{"range":"509","text":"506"},"Update the dependencies array to be: [admin, dispatch]",{"range":"510","text":"511"},"Update the dependencies array to be: [edit, id]",{"range":"512","text":"513"},"Update the dependencies array to be: [admin, replace]",{"range":"514","text":"515"},{"range":"516","text":"502"},{"range":"517","text":"513"},{"range":"518","text":"502"},{"range":"519","text":"502"},{"range":"520","text":"502"},"Update the dependencies array to be: [dispatch, id]",{"range":"521","text":"522"},{"range":"523","text":"522"},{"range":"524","text":"502"},"Update the dependencies array to be: [replace, user]",{"range":"525","text":"526"},{"range":"527","text":"502"},[779,781],"[history]",[654,656],"[dispatch]",[645,647],[1271,1273],[1856,1879],"[userExist, adminExist, admin, history]",[1968,1999],"[id, history.location.pathname, dispatch, admin]",[1154,1177],[1264,1266],"[admin, dispatch]",[1457,1459],"[edit, id]",[436,443],"[admin, replace]",[1071,1073],[2871,2873],[1019,1021],[1941,1943],[825,827],[1084,1086],"[dispatch, id]",[753,757],[937,939],[415,421],"[replace, user]",[572,574]]